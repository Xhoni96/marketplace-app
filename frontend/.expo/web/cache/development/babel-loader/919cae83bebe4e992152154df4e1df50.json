{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ListItem, Screen, ListItemSeperator, ListItemDeleteAction } from \"../components\";\nimport { mosh } from \"../assets/icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialMessages = [{\n  id: 1,\n  title: \"T1\",\n  description: \"D1\",\n  image: mosh\n}, {\n  id: 2,\n  title: \"T2\",\n  description: \"D2\",\n  image: mosh\n}, {\n  id: 3,\n  title: \"T3\",\n  description: \"D3\",\n  image: mosh\n}];\nexport var MessagesScreen = function MessagesScreen() {\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 1),\n      isRefreshing = _useState4[0];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return _jsx(Screen, {\n    children: _jsx(FlatList, {\n      ItemSeparatorComponent: ListItemSeperator,\n      data: messages,\n      keyExtractor: function keyExtractor(message) {\n        return message.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          title: item.title,\n          subTitle: item.description,\n          image: item.image,\n          onPress: function onPress() {\n            return console.log(\"item list clicked\");\n          },\n          renderRightActions: function renderRightActions() {\n            return _jsx(ListItemDeleteAction, {\n              onPress: function onPress() {\n                return handleDelete(item);\n              }\n            });\n          }\n        });\n      },\n      refreshing: isRefreshing,\n      onRefresh: function onRefresh() {\n        setMessages([{\n          id: 2,\n          title: \"T2\",\n          description: \"D2\",\n          image: mosh\n        }]);\n      }\n    })\n  });\n};","map":{"version":3,"sources":["/Users/johnn/Documents/Johnny stuff/ReactNative/marketplace-app/marketplace-app/app/screens/MessagesScreen.jsx"],"names":["React","useState","ListItem","Screen","ListItemSeperator","ListItemDeleteAction","mosh","initialMessages","id","title","description","image","MessagesScreen","messages","setMessages","isRefreshing","handleDelete","message","filter","m","toString","item","console","log"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,iBAA3B,EAA8CC,oBAA9C;AACA,SAASC,IAAT;;AAEA,IAAMC,eAAe,GAAG,CACpB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,WAAW,EAAE,IAHjB;AAIIC,EAAAA,KAAK,EAAEL;AAJX,CADoB,EAOpB;AACIE,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,WAAW,EAAE,IAHjB;AAIIC,EAAAA,KAAK,EAAEL;AAJX,CAPoB,EAapB;AACIE,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,WAAW,EAAE,IAHjB;AAIIC,EAAAA,KAAK,EAAEL;AAJX,CAboB,CAAxB;AAqBA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,kBAAgCX,QAAQ,CAACM,eAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAuBb,QAAQ,CAAC,KAAD,CAA/B;AAAA;AAAA,MAAOc,YAAP;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAE9BH,IAAAA,WAAW,CAACD,QAAQ,CAACK,MAAT,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACX,EAAF,KAASS,OAAO,CAACT,EAAxB;AAAA,KAAhB,CAAD,CAAX;AACH,GAHD;;AAIA,SACI,KAAC,MAAD;AAAA,cACI,KAAC,QAAD;AACI,MAAA,sBAAsB,EAAEJ,iBAD5B;AAEI,MAAA,IAAI,EAAES,QAFV;AAGI,MAAA,YAAY,EAAE,sBAACI,OAAD;AAAA,eAAaA,OAAO,CAACT,EAAR,CAAWY,QAAX,EAAb;AAAA,OAHlB;AAII,MAAA,UAAU,EAAE;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eACR,KAAC,QAAD;AACI,UAAA,KAAK,EAAEA,IAAI,CAACZ,KADhB;AAEI,UAAA,QAAQ,EAAEY,IAAI,CAACX,WAFnB;AAGI,UAAA,KAAK,EAAEW,IAAI,CAACV,KAHhB;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMW,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,WAJb;AAKI,UAAA,kBAAkB,EAAE;AAAA,mBAAM,KAAC,oBAAD;AAAsB,cAAA,OAAO,EAAE;AAAA,uBAAMP,YAAY,CAACK,IAAD,CAAlB;AAAA;AAA/B,cAAN;AAAA;AALxB,UADQ;AAAA,OAJhB;AAaI,MAAA,UAAU,EAAEN,YAbhB;AAcI,MAAA,SAAS,EAAE,qBAAM;AAEbD,QAAAA,WAAW,CAAC,CACR;AACIN,UAAAA,EAAE,EAAE,CADR;AAEIC,UAAAA,KAAK,EAAE,IAFX;AAGIC,UAAAA,WAAW,EAAE,IAHjB;AAIIC,UAAAA,KAAK,EAAEL;AAJX,SADQ,CAAD,CAAX;AAQH;AAxBL;AADJ,IADJ;AA8BH,CAtCM","sourcesContent":["/* eslint-disable global-require */\nimport React, { useState } from \"react\";\nimport { FlatList } from \"react-native\";\n\nimport { ListItem, Screen, ListItemSeperator, ListItemDeleteAction } from \"../components\";\nimport { mosh } from \"../assets/icons\";\n\nconst initialMessages = [\n    {\n        id: 1,\n        title: \"T1\",\n        description: \"D1\",\n        image: mosh,\n    },\n    {\n        id: 2,\n        title: \"T2\",\n        description: \"D2\",\n        image: mosh,\n    },\n    {\n        id: 3,\n        title: \"T3\",\n        description: \"D3\",\n        image: mosh,\n    },\n];\n\nexport const MessagesScreen = () => {\n    const [messages, setMessages] = useState(initialMessages);\n    const [isRefreshing] = useState(false);\n\n    const handleDelete = (message) => {\n        // delete message\n        setMessages(messages.filter((m) => m.id !== message.id));\n    };\n    return (\n        <Screen>\n            <FlatList\n                ItemSeparatorComponent={ListItemSeperator}\n                data={messages}\n                keyExtractor={(message) => message.id.toString()}\n                renderItem={({ item }) => (\n                    <ListItem\n                        title={item.title}\n                        subTitle={item.description}\n                        image={item.image}\n                        onPress={() => console.log(\"item list clicked\")}\n                        renderRightActions={() => <ListItemDeleteAction onPress={() => handleDelete(item)} />}\n                    />\n                )}\n                refreshing={isRefreshing}\n                onRefresh={() => {\n                    // invalidate react query when connected with backend\n                    setMessages([\n                        {\n                            id: 2,\n                            title: \"T2\",\n                            description: \"D2\",\n                            image: mosh,\n                        },\n                    ]);\n                }}\n            />\n        </Screen>\n    );\n};\n\n// const styles = StyleSheet.create({\n\n// });\n"]},"metadata":{},"sourceType":"module"}